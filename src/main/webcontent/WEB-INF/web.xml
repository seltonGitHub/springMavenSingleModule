<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!-- 这个全局参数的作用是：指明Spring-ioc的配置文件的位置-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-config.xml</param-value>
    </context-param>

    <!--Spring的一个核心监听器，对Spring容器进行初始化动作
  即我们以前的ApplicationContext context=new ClassPathXml.....
 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--    mvc的所有配置 将在这里被指明位置 tomcat启动的时候会帮助我们加载spring项目-->

    <!--    将来所有的tomcat请求 都会被这个servlet拦截 -->
    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <!--        这个是spring 用来管理所有请求 做分发处理的一个核心代码-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--        指明 spring-mvc的相关配置-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc-config.xml</param-value>
        </init-param>
        <!--        指明加载tomcat的时候就创建spring基础容器-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>